class Solution
{
  public:
    int minMalwareSpread(vector<vector<int>> &graph, vector<int> &initial)
    {
        int n = graph.size(), ans = 0x7fffffff, idx = -1;
        sort(initial.begin(), initial.end());
        for (const int &ini : initial)
        {
            set<int> flued;
            for (const int &i : initial)
                if (i != ini)
                    flued.insert(i);
            // cout << "ini: " << ini << endl;
            bool flag = false;
            do
            {
                flag = false;
                for (int i = 0; i < n; i++)
                    if (!flued.count(i) && i != ini)
                        for (const int &j : flued)
                            if (graph[i][j])
                            {
                                // cout << i << ' ' << j << endl;
                                flued.insert(i);
                                flag = true;
                                break;
                            };
            } while (flag);
            // cout << flued.size() << endl;
            if (flued.size() < ans)
            {
                ans = flued.size();
                idx = ini;
            };
        };
        return idx;
    }
};